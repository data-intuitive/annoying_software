name: cellranger-build

on:
  push:
    branches: [ main ]

jobs:
  cellranger-build:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'ci skip')"

    strategy:
      fail-fast: false
      matrix:
        config:
        # - {version: "1.0"}
        # - {version: "1.1"}
        # - {version: "1.2"}
        # - {version: "1.3"}
        # - {version: "2.0"}
        # - {version: "2.1"}
        # - {version: "2.2"}
        # - {version: "3.0"}
        # - {version: "3.1"}
        # - {version: "4.0"}
        # - {version: "5.0"}
        # - {version: "6.0"}
        - {version: "6.1"}

    steps:
    - uses: actions/checkout@v2

    - name: Set up sbt
      uses: olafurpg/setup-scala@v10

    - name: Fetch viash
      run: |
        bin/init
        bin/viash -h

    - name: Build dependending containers
      run: |
        bin/viash_build

    - name: Download Cell Ranger
      run: |
        bin/viash run src/cellranger/download_cellranger/config.vsh.yaml -- \
          --tag "${{ matrix.config.name }}" \
          --output "cellranger.tar.gz"

    - name: Encrypt Cell Ranger
      run: |
        bin/viash run src/cellranger/encrypt_cellranger/config.vsh.yaml -- \
          --input "cellranger.tar.gz" \
          --password foo \
          --output "cellranger.zip"

    - name: Download bcl2fastq
      run: |
        bin/viash run src/cellranger/download_bcl2fastq/config.vsh.yaml -- \
          --email "${{ secrets.ILLUMINA_EMAIL }}" \
          --password "${{ secrets.ILLUMINA_PASSWORD }}" \
          --output "bcl2fastq.zip"

    - name: Login to Github Packages
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Build image
      run: |
        bin/viash run src/cellranger/build_cellranger/config.vsh.yaml -- \
          --input_cellranger "cellranger.zip" \
          --input_bcl2fastq "bcl2fastq.zip" \
          --tag "ghcr.io/data-intuitive/cellranger:${{ matrix.config.name }}" \
          --push

    - name: Image digest
      run: echo ${{ steps.docker_build.outputs.digest }}
